{"version":3,"sources":["Shared/Style/values.ts","Shared/Style/colors.ts","Shared/Style/typography.ts","Shared/Style/general.ts","Shared/Generic/H1.tsx","Shared/Generic/H2.tsx","Shared/Generic/H3.tsx","Shared/Generic/H4.tsx","Shared/Generic/H5.tsx","Shared/Generic/H6.tsx","Shared/Generic/Ul.tsx","Shared/Generic/P.tsx","Shared/Generic/Hr.tsx","components/BasicGlitz.tsx","components/Pseudoelement.tsx","components/Boxmodel.tsx","components/DeepStyleComposition.tsx","components/HeadersFlexbox.tsx","components/DynamicStylingUsingProps.tsx","components/Animation.tsx","components/Home.tsx","components/StandaloneStyleObject.tsx","components/GlobalStyling.tsx","App.tsx","index.tsx"],"names":["medium","white","black","secondaryDark","neutralDark","General","styled","content","whiteSpace","createGeneral","fontSize","x","y","height","padding","Tiny","Small","Default","Large","headingStyled","fontWeight","letterSpacing","h1Styled","margin","H1","h2Styled","H2","h3Styled","H3","h4Styled","H4","h5Styled","H5","h6Styled","H6","compose","bare","row","column","restProps","Ul","css","xy","listStyle","display","flexDirection","p","hrStyled","border","bottom","width","style","color","Hr","BasicGlitz","useState","backgroundColor","setBackgroundColor","Divider","P","Wrapper","Title","Span","Button","onClick","div","section","justifyContent","alignItems","h1","cursor","button","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","borderRadius","Pseudoelement","textAlign","Div","Svenskaflag","SvenskaJapanflag","position","Boxmodel","Boxmodeldiv","top","right","left","borderBottom","DeepStyleComposition","InvertedLink","Link","a","textDecoration","textTransform","HeadersFlexbox","Header","A","href","Nav","ToggleButton","aria-expanded","type","NavWrapper","Li","LinkA","nav","ul","media","listStyleType","li","DynamicStylingUsingProps","props","success","Animation","Box","animationName","animationDuration","animationIterationCount","animationDirection","animationTimingFunction","Home","StandaloneStyleObject","Box1","Box2","GlobalStyling","App","activeTab","setActiveTab","toggle","tab","Navbar","dark","expand","NavbarBrand","tabs","vertical","pills","NavItem","NavLink","className","classnames","active","to","TabContent","TabPane","tabId","Row","Col","sm","exact","path","component","glitz","GlitzClient","transformer","transformers","ReactDOM","render","document","getElementById"],"mappings":"wNAQaA,EAAS,GCLTC,EAAQ,QACRC,EAAQ,QAMRC,EAAgB,UAwBhBC,EAAc,U,QCUpB,I,ECtCKC,EDsCuBC,YAAO,CAGxC,SAAU,CACR,UAAW,CACTC,QAAS,MACTC,WAAY,UC/BlB,SAASC,EACPC,EAEAC,EAEAC,GAEA,MAAO,CACLC,OAAQ,EACRC,QAAS,CAAEH,IAAGC,KACdF,a,SAvBQL,O,qBAAAA,I,iBAAAA,I,iBAAAA,I,gBAAAA,M,KA2BqC,mBAC9CA,EAAQU,KAAON,EDPI,GFpBD,EAFD,IG4B6B,cAE9CJ,EAAQW,MAAQP,EDTE,GCSmBT,EH5BnB,IG0B4B,cAG9CK,EAAQY,QAAUR,EDbF,GFdE,GAFA,IG0B4B,cAI9CJ,EAAQa,MAAQT,EDdA,GFbC,GG2BwB,KAGjBH,YAAO,IAiB3B,ICtDMa,EAAgBb,YAAO,CAClCc,WAAY,OACZC,cAAe,UAKFC,EAFSH,EAAc,CAAET,SFSnB,GEToCa,OAAQ,CAAEX,EJC9C,KICNU,CAAShB,IAAOkB,ICHhBC,EAFSN,EAAc,CAAET,SHcnB,GGdoCa,OAAQ,CAAEX,ELI9C,KKFNa,CAASnB,IAAOoB,ICDhBC,EAFSR,EAAc,CAAET,SJgBnB,IIdNiB,CAASrB,IAAOsB,ICAhBC,EAFSV,EAAc,CAAET,SLmBrB,IKjBJmB,CAASvB,IAAOwB,ICAhBC,EAFSZ,EAAc,CAAET,SNqBpB,IMnBLqB,CAASzB,IAAO0B,ICAhBC,EAFSd,EAAc,CAAET,SPsBnB,IOpBNuB,CAAS3B,IAAO4B,I,gBCGhB5B,eAAO,gBAAG6B,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,OAAWC,EAAlC,wDACpB,cAAC,IAAOC,GAAR,2BACMD,GADN,IAEEE,IAAKN,EAAQ,wCACNC,GAAQC,GAAOC,IAAW,CAC7Bf,OAAQ,CAAEmB,GAAI,GACd5B,QAAS,CAAE4B,GAAI,GACfC,UAAW,UAERN,GAAOC,IAAW,CACrBM,QAAS,SAEPN,GAAU,CACZO,cAAe,kBCnBRvC,MAAOwC,EAAE,CACtBvB,OAAQ,CAAEX,EXKS,MYINmC,EAVSzC,YAAO,CAC7B0C,OAAQ,CACNC,OAAQ,CACNC,MAAO,EACPC,MAAO,QACPC,MX2BqB,aWtBZL,CAASzC,IAAO+C,GAAI,CACjCL,OAAQ,CACNrC,EAAG,CAAEuC,MAAO,GACZD,OAAQ,CAAEC,MAAO,IAEnB3B,OAAQ,CAAEX,EZTS,MawBN0C,EA1BI,WAAO,IAAD,EACyBC,mBAASnD,GADlC,mBACdoD,EADc,KACGC,EADH,KAKrB,OACI,gCACI,eAACjB,EAAD,CAAIF,QAAM,EAAV,UACI,cAACd,EAAD,uBACA,cAACE,EAAD,uBACA,cAACE,EAAD,uBACA,cAACE,EAAD,uBACA,cAACE,EAAD,uBACA,cAACE,EAAD,uBACA,cAACwB,EAAD,IACA,cAACC,EAAD,gIAEJ,cAACN,EAAD,IACA,eAACO,EAAD,CAAST,MAAO,CAAEK,mBAAlB,UACI,eAACK,EAAD,oBAAa,cAAC,IAAOC,KAAR,CAAarB,IAAK,CAAEW,MZZrB,WYYC,oBACb,cAACW,EAAD,CAAQC,QAlBpB,WACIP,EAAmBD,IAAoBpD,EZelB,UYfgDA,IAiB7D,4CAQVsD,EAAUpD,IAAO2D,IAAI,CACvBf,MAAO,OACPrC,ObpCgB,EaqChB2C,gBAAiBrD,EACjBoB,OAAQ,CAAEX,EbrCO,KawCfgD,EAAUtD,IAAO4D,QAAQ,CAC3BpD,QAAS,CAAC4B,Gb/BW,IagCrBc,gBAAiBpD,EACjBwC,QAAQ,OACRuB,eAAgB,SAChBC,WAAY,SACZvB,cAAe,WAGbgB,EAAQvD,IAAO+D,GAAG,CACpB3D,SAAU,QACV0C,MZhC2B,UYiC3B,SAAU,CACNkB,OAAQ,UACRlB,MAAMjD,KAIR4D,EAASzD,IAAOiE,OAAO,CACzB7D,SAAU,QASV8D,Ub/DiB,EagEjBC,YAAazE,EACb0E,abjEiB,EakEjBC,WAAY3E,EACZgD,OACA,CACIN,GACA,CACIQ,MAAO,EACPC,MAAO,QACPC,MAAOlD,IAcf0E,WbrFiB,GasFjBC,abrFgB,GasFhBC,cbvFiB,GawFjBC,YbvFgB,GawFhBC,ab7FgB,Ea8FhB,SAAS,CACLxB,gBAAiBtD,EACjBkD,MAAOnD,KC7EAgF,EApBO,WAClB,OACI,qCACI,cAAC,IAAOvD,GAAR,CAAWe,IAAK,CAAEyC,UAAW,UAA7B,4BACA,eAAC,IAAOC,IAAR,CAAY1C,IAAK,CAAEG,QAAS,OAAQuB,eAAgB,gBAApD,UACI,eAAC,IAAOgB,IAAR,CAAY1C,IAAK,CAAEgC,YAAa,QAAhC,UACI,cAAC7C,EAAD,+BAAyB,cAACyB,EAAD,IACzB,cAACM,EAAD,gDACA,cAACyB,EAAD,OAEJ,eAAC,IAAOD,IAAR,WACI,cAACvD,EAAD,qBAAe,cAACyB,EAAD,IACf,cAACM,EAAD,iFACA,cAAC0B,EAAD,UAEK,cAAChC,EAAD,QAOnB+B,EAAc9E,IAAO2D,IAAI,CAC3Bf,MAAO,QACPrC,OAAQ,QACR2C,gBAAiB,WACjB8B,SAAU,WACV,UAAU,CACN/E,QAAS,KACT2C,MAAO,OACPrC,OAAQ,OACRmC,OACA,CACIN,GACA,CACIQ,MAAO,EACPC,MAAO,QACPC,MAAO,WAGfI,gBAAiB,SACjB8B,SAAU,WACVd,UAAW,OAEf,UAAU,CACNjE,QAAS,KACT+E,SAAU,WACVpC,MAAO,OACPrC,OAAQ,OACR2C,gBAAiB,SACjBmB,WAAY,SAIdU,EAAmB/E,IAAO2D,IAAI,CAChCf,MAAO,QACPrC,OAAQ,QACR2C,gBAAiB,WACjB8B,SAAU,WACV,UAAU,CACN/E,QAAS,KACT2C,MAAO,OACPrC,OAAQ,OACRmC,OACA,CACIN,GACA,CACIQ,MAAO,EACPC,MAAO,QACPC,MAAO,WAGfI,gBAAiB,SACjB8B,SAAU,WACVd,UAAW,OAEf,UAAU,CACNjE,QAAS,KACT+E,SAAU,WACVpC,MAAO,OACPrC,OAAQ,OACR2C,gBAAiB,SACjBmB,WAAY,OAEhB,SAAS,CACLzB,MAAO,QACPrC,OAAQ,QACR2C,gBAAiB,MACjB8B,SAAU,WACV,UAAU,CACN/E,QAAS,KACT2C,MAAO,OACPrC,OAAQ,OACR2C,gBAAiB,QACjB8B,SAAU,WACVd,UAAW,OAEf,UAAU,CACNjE,QAAS,KACT2C,MAAO,OACPrC,OAAQ,OACR2C,gBAAiB,QACjB8B,SAAU,WACVX,WAAY,UC3FTY,EAXE,WACb,OACI,qCACI,cAAC3D,EAAD,4DACA,cAAC4D,EAAD,gbAEc,cAACnC,EAAD,QAOpBmC,EAAclF,IAAO2D,IAAI,CAG3Bf,MAAO,MACPrC,OAAQ,IAORC,QAAS,CACL2E,IfnBgB,GeoBhBC,MAAO1F,GACPiD,OAAQjD,GACR2F,KftBgB,IewBpBnC,gBd1B0B,Uc2B1BR,OACA,CACIN,GACA,CACIQ,MAAO,GACPC,MAAO,QACPC,MAAOlD,IAGf0F,aAAc,CACVxC,MdxBsB,UcyBtBD,MAAO,QACPD,Mf/CY,Ge+DhB3B,OAAQ,CACJkE,IAAKzF,GACL0F,MAAO,OACPzC,OAAQjD,GACR2F,KAAM,UCvDCE,EATc,WACzB,OACI,gCACI,cAACjE,EAAD,yDACA,cAACkE,EAAD,0BAAwC,cAACzC,EAAD,QAO9C0C,EAAOzF,IAAO0F,EAAE,CAClB5C,MAAO,OACP,SAAU,CACNA,MAAO,QACP6C,eAAgB,YAChBC,cAAe,eAIjBJ,EAAexF,YAAOyF,EAAM,CAC9B,SAAU,CACR3C,MAAO,MACPhC,WAAY,U,QCFH+E,EApBQ,WACnB,OACI,cAAC,IAAOC,OAAR,UACI,eAAC,EAAD,WACI,cAACC,EAAD,CAAGC,KAAK,IAAI7D,IAAK,CAAErB,WAAY,QAA/B,mBACA,eAACmF,EAAD,WACI,cAACC,EAAD,CAAcC,gBAAc,QAAQC,KAAK,SAAzC,kBACA,eAACC,EAAD,WACI,cAACC,EAAD,UAAI,cAACC,EAAD,CAAOP,KAAK,IAAZ,oBACJ,cAACM,EAAD,UAAI,cAACC,EAAD,CAAOP,KAAK,IAAZ,qBACJ,cAACM,EAAD,UAAI,cAACC,EAAD,CAAOP,KAAK,IAAZ,wBACJ,cAACM,EAAD,UAAI,cAACC,EAAD,CAAOP,KAAK,IAAZ,uBACJ,cAACM,EAAD,UAAI,cAACC,EAAD,CAAOP,KAAK,IAAZ,mCAUtB1C,EAAUtD,IAAO2D,IAAI,CACvBrB,QAAS,OACTwB,WAAY,SACZD,eAAgB,eAChBX,gBAAiB,YAGf+C,EAAMjG,IAAOwG,IAAI,CACnBlE,QAAS,SAGP+D,EAAarG,IAAOyG,GAAP,2BACZC,YAAM,qBAAqB,CACxBpE,QAAS,UAFA,IAIfA,QAAS,OACTqD,eAAgB,OAChBgB,cAAe,UAGbL,EAAKtG,IAAO4G,GAAG,CACjBpG,QAAS,CACL2E,IAAK,OACLC,MAAO,OACPzC,OAAQ,OACR0C,KAAM,UAIRU,EAAI/F,IAAO0F,EAAE,CACfC,eAAgB,SAGdY,EAAQvG,YAAO+F,EAAG,CACpB,SAAU,CACNT,aAAc,CACVxC,MhBhCgBnD,QgBiChBkD,MAAO,QACPD,MjB/DS,MiBoEfsD,EAAelG,IAAOiE,OAAP,aACjB3B,QAAS,SACNoE,YAAM,qBAAqB,CACxBpE,QAAS,WCzDJuE,GATkB,SAACC,GAC9B,OACI,gCACI,cAAC,IAAOtD,KAAR,CAAarB,IAAK,CAAEW,MAAOgE,EAAMC,QAAU,QAAU,OAArD,0BAAwF,uBACxF,cAAC,IAAOvF,GAAR,CAAWW,IAAK,CAAEW,MAAOgE,EAAMhE,MAAQgE,EAAMhE,MAAQ,UAArD,8BCGGkE,GAVG,WACd,OACI,eAAC,IAAOnC,IAAR,WACI,cAACzD,EAAD,wBACI,cAACiC,EAAD,sQACA,cAAC4D,GAAD,kBAAc,cAAClE,EAAD,QAOxBkE,GAAMjH,IAAO2D,IAAI,CACnBf,MAAO,QACPrC,OAAQ,QACR2C,gBAAiB,MACjB8B,SAAU,WACV1C,QAAQ,OACRuB,eAAgB,SAChBf,MAAO,QACPgB,WAAY,SACZoD,cAAe,CACX,KAAO,CAAChE,gBAAgB,MAAOmC,KAAK,MAAOF,IAAI,OAC/C,MAAQ,CAACjC,gBAAgB,SAAUmC,KAAK,QAASF,IAAI,OACrD,MAAQ,CAACjC,gBAAgB,OAAQmC,KAAK,QAASF,IAAI,SACnD,MAAQ,CAACjC,gBAAgB,QAASmC,KAAK,MAAOF,IAAI,SAClD,OAAQ,CAACjC,gBAAgB,MAAOmC,KAAK,MAAOF,IAAI,QAEpDgC,kBAAmB,KACnBC,wBAAyB,WACzBC,mBAAoB,YACpBC,wBAAyB,SACzBrG,OAAQ,CACL0B,OAAQ,WCxBA4E,GAXF,WAET,OACI,8B,kFCUOC,GAXe,WAG1B,OACI,eAAC,IAAO3C,IAAR,CAAY1C,IAAK,CAACG,QAAS,QAA3B,UACI,cAACmF,GAAD,CAAMtF,IAAK,CAAEe,gBAAiB,SAC9B,cAACwE,GAAD,CAAMvF,IALW,CAAEe,gBAAiB,cAY1CuE,GAAOzH,IAAO2D,IAAI,CACpBf,MAAO,QACPrC,OAAQ,UAGNmH,GAAO1H,YAAOyH,GAAM,CACtB7E,MAAO,QACPrC,OAAQ,QACR8D,WAAY,QCTDsD,GATO,SAACb,GACnB,OACE,qCACA,cAAC,IAAOtD,KAAR,uCACA,cAAC,IAAOuC,EAAR,0C,kBC2LS6B,OAjLf,WAAgB,IAAD,EACqB3E,mBAAS,KAD9B,mBACN4E,EADM,KACKC,EADL,KAEPC,EAAS,SAACC,GACVH,IAAcG,GAAKF,EAAaE,IAOtC,OACE,eAAC,IAAD,WACE,cAACC,GAAA,EAAD,CAAQnF,MAAM,OAAOoF,MAAI,EAACC,OAAO,KAAKtF,MAAO,CAACP,QAAS,OAAQuB,eAAgB,UAA/E,SACE,cAACuE,GAAA,EAAD,uDAEF,eAAC,IAAOvD,IAAR,CAAY1C,IAVe,CAC7BG,QAAS,OACTrB,OAAQ,CAAEmB,GAAI,SAQZ,UACE,eAAC,KAAD,CAAKiG,MAAI,EAACC,UAAQ,EAACC,OAAK,EAAxB,UACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,IAAT,wBAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,aAAT,6BAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,UAAT,kCAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,cAAT,8BAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,YAAT,4BAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,wBAAT,wCAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,iBAAT,iCAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,4BAAT,4CAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdf,IAChCnE,QAAS,WAAQqE,EAAO,MAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,yBAAT,yCAGR,cAACL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,OAAdf,IAChCnE,QAAS,WAAQqE,EAAO,OAF1B,SAIE,6BAAI,cAAC,IAAD,CAAMc,GAAG,iBAAT,oCAIV,eAACC,GAAA,EAAD,CAAYjB,UAAWA,EAAvB,UACE,cAACkB,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,UACE,wEACA,2FACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,YAIvC,cAACwB,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,aAAaC,UAAWtC,WAI1C,cAAC+B,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,UAAUC,UAAWzD,UAIvC,cAACkD,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,cAAcC,UAAWtG,UAI3C,cAAC+F,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,YAAYC,UAAWrE,UAIzC,cAAC8D,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,wBAAwBC,UAAW/D,UAIrD,cAACwD,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,iBAAiBC,UAAW3E,UAI9C,cAACoE,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,4BAA4BC,UAAWzC,GAA0BE,SAAO,EAACjE,MAAM,eAIjG,cAACiG,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,yBAAyBC,UAAW9B,GAAuBT,SAAO,EAACjE,MAAM,eAI3F,cAACiG,GAAA,EAAD,CAASC,MAAM,KAAf,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAOE,KAAK,iBAAiBC,UAAW3B,GAAeZ,SAAO,EAACjE,MAAM,yB,iBCnL/EyG,I,MAAQ,IAAIC,IAAY,CAAEC,YAAaC,kBAE7CC,IAASC,OACP,cAAC,IAAD,CAAeL,MAAOA,GAAtB,SACE,cAAC,GAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.2fe14c43.chunk.js","sourcesContent":["// Border\r\nexport const thin = 1;\r\nexport const thick = 2;\r\n\r\n// Margin & padding\r\nexport const tiny = 4;\r\nexport const tinySmall = 6;\r\nexport const small = 8;\r\nexport const medium = 16;\r\nexport const large = 24;\r\nexport const huge = 32;\r\nexport const gigantic = 40;\r\nexport const humongous = 48;\r\nexport const ridiculouslyLarge = 87;\r\nexport const ridiculouslyHuge = 96;\r\nexport const ridiculouslyGigantic = 113;\r\nexport const areYouSureLarge = 144;\r\nexport const moderate = large; // This is default spacing, e.g. margin between `<p>`\r\n","//import { baseTextColor } from './typography';\r\n\r\n// Colors\r\nexport const white = 'white';\r\nexport const black = 'black';\r\nexport const primary = '#000000';\r\nexport const primaryLight = '#333333';\r\nexport const primaryText = white;\r\nexport const secondary = '#e24e4a';\r\nexport const secondaryLight = '#f0a5a3';\r\nexport const secondaryDark = '#ab211c';\r\nexport const secondaryText = white;\r\nexport const tertiary = '#f1c93e';\r\nexport const tertiaryLight = '#f8e49b';\r\nexport const tertiaryDark = '#b9940e';\r\n//export const tertiaryText = baseTextColor;\r\nexport const quaternary = '#4ba9af';\r\nexport const quaternaryLight = '#b4dcdf';\r\nexport const quaternaryDark = '#3c868b';\r\nexport const quaternaryText = white;\r\nexport const monochrome = '#d8d8d8';\r\nexport const monochromeLight = '#e5e5e5';\r\nexport const monochromeDark = '#9c9c9c';\r\n// export const monochromeText = baseTextColor;\r\nexport const positive = '#3CA300';\r\nexport const positiveLight = '#4BCC00';\r\nexport const positiveDark = '#2D7A00';\r\nexport const positiveText = white;\r\nexport const negative = '#e24e4a';\r\nexport const negativeLight = '#e6b3b3';\r\nexport const negativeDark = '#993333';\r\nexport const negativeText = white;\r\nexport const neutral = '#CCC200';\r\nexport const neutralLight = '#F5E900';\r\nexport const neutralDark = '#A39B00';\r\nexport const outlineGrey = '#C6C6C6';\r\n\r\n\r\ntype rgbType = [number, number, number];\r\n\r\nexport const hexToRgb = (hexValue: string): rgbType => {\r\n  const value = hexValue.replace('#', '');\r\n  const redHex = value.substr(0, 2);\r\n  const greenHex = value.substr(2, 2);\r\n  const blueHex = value.substr(4, 2);\r\n  const redNum = parseInt(redHex, 16);\r\n  const greenNum = parseInt(greenHex, 16);\r\n  const blueNum = parseInt(blueHex, 16);\r\n  return [redNum, greenNum, blueNum];\r\n};\r\n","import { Style } from '@glitz/type';\r\nimport { styled } from '@glitz/react';\r\n\r\nexport const linkColor = '#2171d8';\r\n\r\nexport const alternativeTextColor = '#b5b5b5';\r\n\r\n// Large font sizes\r\nexport const ultraOmegaGigaWhatDoesTheScouterSayAboutHisPowerLevel = 9001;\r\nexport const ultraOmegaGiga = 126;\r\nexport const ultraMega = 108;\r\nexport const ultraKilo = 90;\r\nexport const giga = 72;\r\nexport const mega = 54;\r\nexport const kilo = 36;\r\n\r\n// Heading font sizes\r\nexport const alpha = 30;\r\nexport const beta = 26;\r\nexport const gamma = 24;\r\nexport const delta = 22;\r\nexport const epsilon = 20;\r\nexport const zeta = 16;\r\nexport const eta = 15;\r\nexport const theta = 14;\r\nexport const iota = 13;\r\nexport const kappa = 12;\r\nexport const lambda = 11;\r\n// Weights\r\nexport const fontWeightBold = 600;\r\nexport const fontWeightMedium = 500;\r\nexport const fontWeightNormal = 400;\r\n\r\nexport function calculateLineHeightInPixels(fontSize: number) {\r\n}\r\n\r\nexport function truncate(overflow = 'ellipsis'): Style {\r\n  return {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: overflow,\r\n  };\r\n}\r\n\r\nexport const preserveEmptyStyled = styled({\r\n  // If breadcrumbs is an empty list we want to preserve the height because an\r\n  // empty list means that breadcrumbs will be loaded and displayed eventually\r\n  ':empty': {\r\n    ':before': {\r\n      content: '\" \"',\r\n      whiteSpace: 'pre',\r\n    },\r\n  },\r\n});\r\n","import { styled } from '@glitz/react';\r\nimport { small, large, huge, medium, tiny } from './values';\r\nimport { eta, kappa, lambda } from './typography';\r\n\r\n// Used to make sure some elements are styled the same, e.g. buttons and fields\r\n\r\nexport enum General {\r\n  Default,\r\n  Small,\r\n  Large,\r\n  Tiny,\r\n}\r\n\r\ntype GeneralType = {\r\n  height: number;\r\n  padding: { x: number; y: number };\r\n  fontSize: number;\r\n};\r\n\r\nfunction createGeneral(\r\n  fontSize: number,\r\n  /** Padding left and right */\r\n  x: number,\r\n  /** Padding top and bottom */\r\n  y: number,\r\n): GeneralType {\r\n  return {\r\n    height: 1,\r\n    padding: { x, y },\r\n    fontSize,\r\n  };\r\n}\r\n\r\nconst generals: { [key in General]: GeneralType } = {\r\n  [General.Tiny]: createGeneral(lambda, small, tiny),\r\n  [General.Small]: createGeneral(kappa, medium, small),\r\n  [General.Default]: createGeneral(eta, large, small),\r\n  [General.Large]: createGeneral(eta, huge, 12),\r\n};\r\n\r\nconst generalResetStyled = styled({  });\r\n\r\nexport function general(type = General.Default) {\r\n  return generals[type];\r\n}\r\n\r\nexport function createGeneralStyled(type = General.Default, singleLine = true) {\r\n  const decorator = generalResetStyled(general(type));\r\n\r\n  if (singleLine) {\r\n    return decorator;\r\n  } else {\r\n    // Remove `height` to enable multiple rows\r\n    return decorator({ height: undefined });\r\n  }\r\n}\r\n\r\nexport const headerHeightFull = 80;\r\nexport const headerHeightCompact = 60;\r\nexport const headerLogoHeightFull = 54;\r\nexport const headerLogoHeightCompact = 30;\r\nexport const headerHeightFullCheckout = 130;\r\n\r\nexport const flyoutWidth = 480;\r\n","import { styled } from '@glitz/react';\r\nimport { alpha, moderate } from '../../Shared/Style';\r\n\r\nexport const headingStyled = styled({\r\n  fontWeight: 'bold',\r\n  letterSpacing: '0.4px',\r\n});\r\n\r\nexport const h1Styled = headingStyled({ fontSize: alpha, margin: { y: moderate } });\r\n\r\nexport default h1Styled(styled.H1);\r\n","import { styled } from '@glitz/react';\r\nimport { headingStyled } from './H1';\r\nimport { gamma, moderate } from '../../Shared/Style';\r\n\r\n\r\nexport const h2Styled = headingStyled({ fontSize: gamma, margin: { y: moderate } });\r\n\r\nexport default h2Styled(styled.H2);\r\n","import { styled } from '@glitz/react';\r\nimport { headingStyled } from './H1';\r\nimport { delta } from '../../Shared/Style';\r\n\r\nexport const h3Styled = headingStyled({ fontSize: delta });\r\n\r\nexport default h3Styled(styled.H3);\r\n","import { styled } from '@glitz/react';\r\nimport { headingStyled } from './H1';\r\nimport { eta } from '../Style';\r\n\r\nexport const h4Styled = headingStyled({ fontSize: eta });\r\n\r\nexport default h4Styled(styled.H4);\r\n","import { styled } from '@glitz/react';\r\nimport { headingStyled } from './H1';\r\nimport { iota } from '../Style';\r\n\r\nexport const h5Styled = headingStyled({ fontSize: iota });\r\n\r\nexport default h5Styled(styled.H5);\r\n","import { styled } from '@glitz/react';\r\nimport { headingStyled } from './H1';\r\nimport { kappa } from '../Style';\r\n\r\nexport const h6Styled = headingStyled({ fontSize: kappa });\r\n\r\nexport default h6Styled(styled.H6);\r\n","import React from 'react';\r\nimport { styled, StyledProps } from '@glitz/react';\r\n\r\ntype PropType = React.HTMLAttributes<HTMLUListElement> & {\r\n  bare?: boolean;\r\n  row?: boolean;\r\n  column?: boolean;\r\n};\r\n\r\nexport default styled(({ compose, bare, row, column, ...restProps }: StyledProps & PropType) => (\r\n  <styled.Ul\r\n    {...restProps}\r\n    css={compose({\r\n      ...((bare || row || column) && {\r\n        margin: { xy: 0 },\r\n        padding: { xy: 0 },\r\n        listStyle: 'none',\r\n      }),\r\n      ...((row || column) && {\r\n        display: 'flex',\r\n      }),\r\n      ...(column && {\r\n        flexDirection: 'column',\r\n      }),\r\n    })}\r\n  />\r\n));\r\n","import { styled } from '@glitz/react';\r\nimport { moderate } from '../../Shared/Style';\r\n\r\nexport default styled.p({\r\n  margin: { y: moderate },\r\n});\r\n","import { styled } from '@glitz/react';\r\nimport { moderate, outlineGrey } from '../Style';\r\n\r\nexport const hrStyled = styled({\r\n  border: {\r\n    bottom: {\r\n      width: 1,\r\n      style: 'solid',\r\n      color: outlineGrey,\r\n    },\r\n  },\r\n});\r\n\r\nexport default hrStyled(styled.Hr, {\r\n  border: {\r\n    x: { width: 0 },\r\n    bottom: { width: 0 },\r\n  },\r\n  margin: { y: moderate },\r\n});\r\n","import React, {useState} from 'react'\r\nimport { styled } from '@glitz/react';\r\nimport { huge, humongous, large, medium, small, thick, thin } from '../Shared/Style';\r\nimport * as style from '../Shared/Style';\r\nimport { black, monochromeLight, neutralDark, positiveLight, secondaryDark, tertiaryDark, white } from '../Shared/Style';\r\nimport { H2, P, Hr, H1, H3, H4, H5, H6, Ul } from '../Shared/Generic';\r\n\r\nconst BasicGlitz = () => {\r\n    const [backgroundColor, setBackgroundColor] = useState(neutralDark);\r\n    function onClickButton() {\r\n        setBackgroundColor(backgroundColor === neutralDark ? positiveLight : neutralDark);\r\n    }\r\n    return (\r\n        <div>\r\n            <Ul column>\r\n                <H1>Heading1</H1>\r\n                <H2>Heading2</H2>\r\n                <H3>Heading3</H3>\r\n                <H4>Heading4</H4>\r\n                <H5>Heading5</H5>\r\n                <H6>Heading6</H6>\r\n                <Divider />\r\n                <P>P tag: This example creates two simple components, a wrapper a title, a button with some styles attached to it</P>\r\n            </Ul>\r\n            <Hr />\r\n            <Wrapper style={{ backgroundColor }}>\r\n                <Title>Hover <styled.Span css={{ color: tertiaryDark }}>me!</styled.Span></Title>\r\n                <Button onClick={onClickButton}>Change background color</Button>\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BasicGlitz\r\n\r\nconst Divider = styled.div({\r\n    width: '100%',\r\n    height: thin,\r\n    backgroundColor: secondaryDark,\r\n    margin: { y: thick },\r\n  });\r\n\r\nconst Wrapper = styled.section({\r\n    padding: {xy: humongous},\r\n    backgroundColor: neutralDark,\r\n    display:'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n})\r\n\r\nconst Title = styled.h1({\r\n    fontSize: '1.5em',\r\n    color: monochromeLight,\r\n    ':hover': {\r\n        cursor: 'pointer',\r\n        color:secondaryDark,\r\n    },\r\n})\r\n\r\nconst Button = styled.button({\r\n    fontSize: '1.2em',\r\n    /* // Margin different ways\r\n    margin: { xy: '2em' },\r\n    margin: {\r\n        top: '20px',\r\n        right: '30px',\r\n        bottom: '20px',\r\n        left: '30px',\r\n    },*/\r\n    marginTop: small,\r\n    marginRight: medium,\r\n    marginBottom: small,\r\n    marginLeft: medium, \r\n    border:\r\n    {\r\n        xy:\r\n        {\r\n            width: 1,\r\n            style: 'solid',\r\n            color: black\r\n        }\r\n    }, //border: 2px solid palevioletred;\r\n    /* // Padding different ways\r\n    padding: {\r\n        x: '1em',\r\n        y: '.25em',\r\n    }, //padding: 0.25em 1em;\r\n    padding: {\r\n        top: '20px',\r\n        right: '30px',\r\n        bottom: '20px',\r\n        left: '30px',\r\n    }, */\r\n    paddingTop: large,\r\n    paddingRight: huge,\r\n    paddingBottom: large,\r\n    paddingLeft: huge,\r\n    borderRadius: style.tiny,\r\n    ':hover':{\r\n        backgroundColor: black,\r\n        color: white,\r\n    }\r\n})","import React from 'react'\r\nimport { styled } from '@glitz/react';\r\nimport { P, Hr, H3 } from '../Shared/Generic';\r\n\r\nconst Pseudoelement = () => {\r\n    return (\r\n        <>\r\n            <styled.H2 css={{ textAlign: 'center' }}>Pseudo Element</styled.H2>\r\n            <styled.Div css={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                <styled.Div css={{ marginRight: '50px' }}>\r\n                    <H3>:before, ::after</H3><Hr />\r\n                    <P>This example creates svenska flag</P>\r\n                    <Svenskaflag></Svenskaflag>\r\n                </styled.Div>\r\n                <styled.Div>\r\n                    <H3>:hover</H3><Hr />\r\n                    <P>This example hovering over svenska flag converts into Denmark flag</P>\r\n                    <SvenskaJapanflag></SvenskaJapanflag>\r\n                </styled.Div>\r\n            </styled.Div><Hr />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pseudoelement\r\n\r\nconst Svenskaflag = styled.div({\r\n    width: '300px',\r\n    height: '200px',\r\n    backgroundColor: 'darkblue',\r\n    position: 'relative',\r\n    '::after':{\r\n        content: '\"\"',\r\n        width: '100%',\r\n        height: '50px',\r\n        border:\r\n        {\r\n            xy:\r\n            {\r\n                width: 1,\r\n                style: 'solid',\r\n                color: 'yellow',\r\n            }\r\n        },\r\n        backgroundColor: 'yellow',\r\n        position: 'absolute',\r\n        marginTop: '25%',\r\n    },\r\n    ':before':{\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: '50px',\r\n        height: '100%',\r\n        backgroundColor: 'yellow',\r\n        marginLeft: '25%',\r\n    }\r\n})\r\n\r\nconst SvenskaJapanflag = styled.div({\r\n    width: '300px',\r\n    height: '200px',\r\n    backgroundColor: 'darkblue',\r\n    position: 'relative',\r\n    '::after':{\r\n        content: '\"\"',\r\n        width: '100%',\r\n        height: '50px',\r\n        border:\r\n        {\r\n            xy:\r\n            {\r\n                width: 1,\r\n                style: 'solid',\r\n                color: 'yellow',\r\n            }\r\n        },\r\n        backgroundColor: 'yellow',\r\n        position: 'absolute',\r\n        marginTop: '25%',\r\n    },\r\n    ':before':{\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: '50px',\r\n        height: '100%',\r\n        backgroundColor: 'yellow',\r\n        marginLeft: '25%',\r\n    },\r\n    ':hover':{\r\n        width: '300px',\r\n        height: '200px',\r\n        backgroundColor: 'red',\r\n        position: 'relative',\r\n        '::after':{\r\n            content: '\"\"',\r\n            width: '100%',\r\n            height: '50px',\r\n            backgroundColor: 'white',\r\n            position: 'absolute',\r\n            marginTop: '25%',\r\n        },\r\n        ':before':{\r\n            content: '\"\"',\r\n            width: '50px',\r\n            height: '100%',\r\n            backgroundColor: 'white',\r\n            position: 'absolute',\r\n            marginLeft: '25%',\r\n        },\r\n    },\r\n})","import { styled } from '@glitz/react'\r\nimport React from 'react'\r\nimport { H3, Hr } from '../Shared/Generic'\r\nimport { black, gigantic, medium, monochromeDark, secondaryLight, thin, tiny } from '../Shared/Style'\r\n\r\nconst Boxmodel = () => {\r\n    return (\r\n        <>\r\n            <H3>width, height, margin, padding, border, color</H3>\r\n            <Boxmodeldiv>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam eu sem tempor, varius quam at, luctus dui. Mauris magna metus, dapibus nec turpis vel, semper malesuada ante. Vestibulum id metus ac nisl bibendum scelerisque non non purus. Suspendisse varius nibh non aliquet sagittis. Vivamus fermentum in arcu in aliquam. Quisque aliquam porta odio in fringilla. Vivamus nisl leo, blandit at bibendum eu, tristique eget.\r\n            </Boxmodeldiv><Hr />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Boxmodel\r\n\r\nconst Boxmodeldiv = styled.div({\r\n    // width: 432,\r\n    // width: areYouSureLarge,\r\n    width: '30%',\r\n    height: 200,\r\n    // padding: {x: medium + tiny, y: gigantic},\r\n    // padding: {xy: medium},\r\n    /* paddingTop: medium,\r\n    paddingRight: medium,\r\n    paddingBottom: medium,\r\n    paddingLeft: medium, */\r\n    padding: {\r\n        top: gigantic,\r\n        right: medium + tiny,\r\n        bottom: medium + tiny,\r\n        left: gigantic,\r\n    },\r\n    backgroundColor: secondaryLight,\r\n    border:\r\n    {\r\n        xy:\r\n        {\r\n            width: 10,\r\n            style: 'solid',\r\n            color: black\r\n        }\r\n    },\r\n    borderBottom: {\r\n        color: monochromeDark,\r\n        style: 'solid',\r\n        width: thin,\r\n    },\r\n    // border: {\r\n    //     xy: {\r\n    //         color: primary,\r\n    //     },\r\n    //     right: {\r\n    //         width: 0,\r\n    //     },\r\n    // },\r\n    // margin: {x: 'auto', y: medium + tiny},\r\n    // margin: {xy: medium},\r\n    /* marginTop: medium + tiny,\r\n    marginRight: 'auto',\r\n    marginBottom: medium + tiny,\r\n    marginLeft: 'auto', */\r\n    margin: {\r\n        top: medium + tiny,\r\n        right: 'auto',\r\n        bottom: medium + tiny,\r\n        left: 'auto',\r\n    },\r\n})","import { styled } from '@glitz/react'\r\nimport React from 'react'\r\nimport { H3, Hr } from '../Shared/Generic'\r\n\r\nconst DeepStyleComposition = () => {\r\n    return (\r\n        <div>\r\n            <H3>Deep style composition OR Extended styling</H3>\r\n            <InvertedLink>HOVER ON ME</InvertedLink><Hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeepStyleComposition\r\n\r\nconst Link = styled.a({\r\n    color: 'grey',\r\n    ':hover': {\r\n        color: 'black',\r\n        textDecoration: 'underline',\r\n        textTransform: 'lowercase',\r\n      },\r\n})\r\n\r\nconst InvertedLink = styled(Link, {\r\n    ':hover': {\r\n      color: 'red',\r\n      fontWeight: 'bold',\r\n    },\r\n    // Results in:\r\n    // {\r\n    //   color: 'grey',\r\n    //   ':hover': {\r\n    //     color: 'red',\r\n    //     textDecoration: 'underline',\r\n    //     textTransform: 'lowercase',\r\n    //     fontWeight: 'bold',\r\n    //   }\r\n    // }\r\n});","import { media } from '@glitz/core'\r\nimport { styled } from '@glitz/react'\r\nimport React from 'react'\r\nimport { negativeText, thick } from '../Shared/Style'\r\n\r\nconst HeadersFlexbox = () => {\r\n    return (\r\n        <styled.Header>\r\n            <Wrapper>\r\n                <A href=\"#\" css={{ fontWeight: 'bold' }}>Brand</A>\r\n                <Nav>\r\n                    <ToggleButton aria-expanded=\"false\" type=\"button\">menu</ToggleButton>\r\n                    <NavWrapper>\r\n                        <Li><LinkA href=\"#\">Home</LinkA></Li>\r\n                        <Li><LinkA href=\"#\">About</LinkA></Li>\r\n                        <Li><LinkA href=\"#\">Services</LinkA></Li>\r\n                        <Li><LinkA href=\"#\">Hire us</LinkA></Li>\r\n                        <Li><LinkA href=\"#\">Contact</LinkA></Li>\r\n                    </NavWrapper>\r\n                </Nav>\r\n            </Wrapper>\r\n        </styled.Header>\r\n    )\r\n}\r\n\r\nexport default HeadersFlexbox\r\n\r\nconst Wrapper = styled.div({\r\n    display: 'flex',\r\n    alignItems: 'center', \r\n    justifyContent: 'space-around',\r\n    backgroundColor: 'skyblue',\r\n})\r\n\r\nconst Nav = styled.nav({\r\n    display: 'flex',\r\n})\r\n\r\nconst NavWrapper = styled.ul({\r\n    ...media('(max-Width: 480px)',{\r\n          display: 'none',\r\n        }),\r\n    display: 'flex',\r\n    textDecoration: 'none',\r\n    listStyleType: 'none',\r\n})\r\n\r\nconst Li = styled.li({\r\n    padding: {\r\n        top: '10px',\r\n        right: '10px',\r\n        bottom: '10px',\r\n        left: '10px',\r\n    },\r\n})\r\n\r\nconst A = styled.a({\r\n    textDecoration: 'none',\r\n})\r\n\r\nconst LinkA = styled(A, {\r\n    ':hover': {\r\n        borderBottom: {\r\n            color: negativeText,\r\n            style: 'solid',\r\n            width: thick,\r\n        },\r\n    },\r\n});\r\n\r\nconst ToggleButton = styled.button({\r\n    display: 'block',\r\n    ...media('(min-Width: 480px)',{\r\n          display: 'none',\r\n        }),\r\n})\r\n\r\n","import React from 'react'\r\nimport { styled } from '@glitz/react';\r\n\r\ntype PropType = {\r\n    success?: boolean;\r\n    color?: string;\r\n}\r\nconst DynamicStylingUsingProps = (props: PropType) => {\r\n    return (\r\n        <div>\r\n            <styled.Span css={{ color: props.success ? 'green' : 'red' }}>Hello world!</styled.Span><br/>\r\n            <styled.H4 css={{ color: props.color ? props.color : 'yellow' }}>Hello world!</styled.H4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DynamicStylingUsingProps\r\n","import React from 'react'\r\nimport { styled } from '@glitz/react';\r\nimport { H2, P, Hr } from '../Shared/Generic';\r\n\r\nconst Animation = () => {\r\n    return (\r\n        <styled.Div>\r\n            <H2>Animation</H2>\r\n                <P>The example will change both the background-color and the position of the element when the animation is 25% complete, 50% complete, and again when the animation is 100% complete.It uses the value \"infinite\" to make the animation continue for ever.</P>\r\n                <Box>Box</Box><Hr />\r\n        </styled.Div>\r\n    )\r\n}\r\n\r\nexport default Animation\r\n\r\nconst Box = styled.div({\r\n    width: '100px',\r\n    height: '100px',\r\n    backgroundColor: 'red',\r\n    position: 'relative',\r\n    display:'flex',\r\n    justifyContent: 'center',\r\n    color: 'white',\r\n    alignItems: 'center',\r\n    animationName: {\r\n        '0%':  {backgroundColor:'red', left:'0px', top:'0px',},\r\n        '25%':  {backgroundColor:'yellow', left:'200px', top:'0px',},\r\n        '50%':  {backgroundColor:'blue', left:'200px', top:'200px',},\r\n        '75%':  {backgroundColor:'green', left:'0px', top:'200px',},\r\n        '100%': {backgroundColor:'red', left:'0px', top:'0px',} \r\n    },\r\n    animationDuration: '4s',\r\n    animationIterationCount: 'infinite',\r\n    animationDirection: 'alternate',\r\n    animationTimingFunction: 'linear', //animation-timing-function: linear/ease-in-out/steps(5, end)/cubic-bezier(0.1, -0.6, 0.2, 0);\r\n    margin: {\r\n       bottom: '250px',\r\n    }\r\n});","import React from 'react';\r\n\r\nconst Home = () => {\r\n    \r\n    return (\r\n        <>\r\n    \r\n                \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { styled } from '@glitz/react'\r\nimport { Style } from '@glitz/type'\r\n\r\nconst StandaloneStyleObject = () => {\r\n    const box2Style: Style = { backgroundColor: 'blue' };\r\n\r\n    return (\r\n        <styled.Div css={{display: 'flex'}}>\r\n            <Box1 css={{ backgroundColor: 'red' }}></Box1>\r\n            <Box2 css={box2Style}></Box2>\r\n        </styled.Div>\r\n    )\r\n}\r\n\r\nexport default StandaloneStyleObject\r\n\r\nconst Box1 = styled.div({\r\n    width: '100px',\r\n    height: '100px',\r\n})\r\n\r\nconst Box2 = styled(Box1, {\r\n    width: '200px',\r\n    height: '200px',\r\n    marginLeft: '2em',\r\n});","import React from 'react'\r\nimport { styled } from '@glitz/react';\r\n\r\ntype Props = {\r\n    title: string;\r\n  };\r\n\r\nconst GlobalStyling = (props: Props) => {\r\n    return (\r\n      <>\r\n      <styled.Span>Some bold and green text</styled.Span>\r\n      <styled.A>Underlined when hovered</styled.A>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default GlobalStyling\r\n","import React, { useState } from 'react';\r\nimport { styled } from '@glitz/react';\r\nimport { Style } from '@glitz/type';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport BasicGlitz from './components/BasicGlitz';\r\nimport Pseudoelement from './components/Pseudoelement';\r\nimport Boxmodel from './components/Boxmodel';\r\nimport DeepStyleComposition from './components/DeepStyleComposition';\r\nimport HeadersFlexbox from './components/HeadersFlexbox';\r\nimport DynamicStylingUsingProps from './components/DynamicStylingUsingProps';\r\nimport Animation from './components/Animation';\r\nimport Home from './components/Home';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport StandaloneStyleObject from './components/StandaloneStyleObject';\r\nimport GlobalStyling from './components/GlobalStyling';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n} from 'reactstrap';\r\n\r\nfunction App() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const toggle = (tab: any) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n  const containerStyle : Style = { \r\n    display: 'flex', \r\n    margin: { xy: '10em' },\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar color=\"dark\" dark expand=\"md\" style={{display: 'flex', justifyContent: 'center'}}>\r\n        <NavbarBrand>Glitz React Playground with TypeScript</NavbarBrand>\r\n      </Navbar>\r\n      <styled.Div css={containerStyle}>\r\n        <Nav tabs vertical pills>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '1' })}\r\n              onClick={() => { toggle('1'); }}\r\n            >\r\n              <li><Link to=\"/\">Home</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '2' })}\r\n              onClick={() => { toggle('2'); }}\r\n            >\r\n              <li><Link to=\"/animation\">Animation</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '3' })}\r\n              onClick={() => { toggle('3'); }}\r\n            >\r\n              <li><Link to=\"/header\">HeadersFlexbox</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '4' })}\r\n              onClick={() => { toggle('4'); }}\r\n            >\r\n              <li><Link to=\"/basicGlitz\">BasicGlitz</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '5' })}\r\n              onClick={() => { toggle('5'); }}\r\n            >\r\n              <li><Link to=\"/boxmodel\">Boxmodel</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '6' })}\r\n              onClick={() => { toggle('6'); }}\r\n            >\r\n              <li><Link to=\"/deepStyleComposition\">DeepStyleComposition</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '7' })}\r\n              onClick={() => { toggle('7'); }}\r\n            >\r\n              <li><Link to=\"/pseudoelement\">Pseudoelement</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '8' })}\r\n              onClick={() => { toggle('8'); }}\r\n            >\r\n              <li><Link to=\"/dynamicStylingUsingProps\">DynamicStylingUsingProps</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '9' })}\r\n              onClick={() => { toggle('9'); }}\r\n            >\r\n              <li><Link to=\"/standaloneStyleObject\">StandaloneStyleObject</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '10' })}\r\n              onClick={() => { toggle('10'); }}\r\n            >\r\n              <li><Link to=\"/globalStyling\">GlobalStyling</Link></li>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <h4>Glitz React Playground with TypeScript</h4>\r\n                <p>Reference: https://github.com/frenic/glitz#getting-started</p>\r\n                <Route exact path=\"/\" component={Home} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/animation\" component={Animation} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"3\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/header\" component={HeadersFlexbox} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"4\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/basicGlitz\" component={BasicGlitz} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"5\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/boxmodel\" component={Boxmodel} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"6\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/deepStyleComposition\" component={DeepStyleComposition} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"7\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/pseudoelement\" component={Pseudoelement} />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"8\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/dynamicStylingUsingProps\" component={DynamicStylingUsingProps} success color=\"blue\" />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"9\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/standaloneStyleObject\" component={StandaloneStyleObject} success color=\"blue\" />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"10\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Route path=\"/globalStyling\" component={GlobalStyling} success color=\"blue\" />\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </styled.Div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { GlitzClient } from '@glitz/core';\nimport { GlitzProvider } from '@glitz/react';\nimport transformers from '@glitz/transformers';\nimport './index.css';\n\nconst glitz = new GlitzClient({ transformer: transformers() });\n\nReactDOM.render(\n  <GlitzProvider glitz={glitz}>\n    <App />\n  </GlitzProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}